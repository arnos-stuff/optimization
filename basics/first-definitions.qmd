---
include-in-header: |
    \newcommand\dom{\mathop{\mathrm{dom}}\limits}
    \newcommand\im{\mathop{\mathrm{im}}\limits}
    \newcommand\supp{\mathop{\mathrm{supp}}\limits}
    \newcommand\id{\mathop{\mathrm{id}}\limits}
    \newcommand\tr{\mathop{\mathrm{tr}}\limits}
    \newcommand\diag{\mathop{\mathrm{diag}}\limits}
    \newcommand\sign{\mathop{\mathrm{sign}}\limits}
    \newcommand\sgn{\mathop{\mathrm{sgn}}\limits}
    \newcommand\dist{\mathop{\mathrm{dist}}\limits}
    \newcommand\argmin{\mathop{\mathrm{argmin}}\limits}
    \newcommand\argmax{\mathop{\mathrm{argmax}}\limits}
    \newcommand\minimax[2]{\mathop{\mathrm{min}_{#1}\mathrm{max}_{#2}}\limits}
    \newcommand\maximin[2]{\mathop{\mathrm{max}_{#1}\mathrm{min}_{#2}}\limits}
---


# Review of Optimization basics {.Review}

## First definitions {.FirstDefs}

### Why we need Calculus

Suppose you have a function $f(x)$ and you want to find the value of $x$ that makes $f(x)$ as large as possible. This is called a *maximum*.  

Our issue is thus to find various forms of maxima and minima. We denote this problem as follows:

| Number | Objective Name | Mathematical expression | Key elements |
| --- | --- | ----- | ------ |
| $(1)$ | Unconstrained Maximization | $\max_x f(x)$ | The only restriction on $f$ is the nature of its admissible inputs $\mathbf{dom}(f)$
| $(2)$ | Finding the global maximizer | $x^\star \gets \argmax_x f(x)$ | There is generally a more restriction set of assumptions than in $(1)$ to find the precise $x^\star$ for which $f$ is minimized |
| $(3)$ | Finding the a maximiser within a constraint set | $\underset{x\in\mathcal{X}}{\max f(x)}$ | In this case, there is no possibility for $x$ to go outside of a predefined set $\mathcal{X}$, this is very useful in real-life applications |

When is calculus useful and not useful ? Here's a first reason it might or might not be useful: the __domain__ $\mathcal{X}$ of the input variable, or (which is often the same), the domain $\mathbf{dom}(f)$ or our function.


A pretty important part of the problem is what we call the *domain* of the function. This is the set of values that $x$ can take on. For example, if $f(x) = x^2$, then the domain is the set of real numbers $\mathbb{R}$.  



Domains change everything because, for example, if your domain $\mathbf{dom}(X)$ is discrete, then the image $\mathbf{im}_f(X)$ $-$ also denoted $f(\mathbf{dom}(X))$ $-$ is also discrete, and you just end up with the array-sorting problem, [for which efficient algorithms like quicksort exist.](https://en.wikipedia.org/wiki/Quicksort).

```{=html}
<iframe scrolling="no" width="80%" height="360" style="transform: translateX(5%)" center="true" autoplay="true" src="https://media.tenor.com/HB_pdTic1egAAAAd/beat-flatten.gif" title="Quicksort demo" sandbox="allow-same-origin allow-scripts allow-forms"></iframe>
```


### What is calculus ?

**The derivative** of a function $f(x)\colon \mathbb{R}\to\mathbb{R}$ is a function $f'(x)$ is just what everyone knows, that is the limit of 

$$f'(x) = \lim_{h\to 0} \frac{f(x+h) - f(x)}{h}$$



When you have a function of several variables, say $f(x_1, x_2, \dots, x_n)$, whose values are still real numbers, then you can still behave as if nothing happened, because if you fix the $n-1$ variables

$$\bar{x}_{\scriptscriptstyle-i} \coloneqq (\bar{x}_1,\ldots,\bar{x}_{\scriptscriptstyle i-1},x_{\scriptscriptstyle i+1},\dots\bar{x}_n)$$

Then the **univariate function** $g(x_i)$ is still a function of a single variable, and you can still take its derivative:

$$ g\colon x \mapsto f(\bar{x}_{\scriptscriptstyle-i}, x) \coloneqq f(\bar{x}_1,\ldots,\bar{x}_{\scriptscriptstyle i-1},x_i, x_{\scriptscriptstyle i+1},\dots\bar{x}_n)$$



We have a bunch of fancy notation for this, namely $\partial_i f(\bar{x})$ for short, or $\frac{\partial f}{\partial x_i}(\bar{x})$.
We also sometimes speak of the **directional derivative** of $f$ in the direction of $\bar{x}$, which is often denoted $D_{\bar{x}}f$.

What is not clear though, is how we relate each derivative to the others. How does $\partial_i f(\bar{x})$ relate to $\partial_j f(\bar{x})$?

There is a good theorem to explain this ! It is linked to something called the __Jacobian matrix__ and the __chain rule__. But we'll get to that later on.